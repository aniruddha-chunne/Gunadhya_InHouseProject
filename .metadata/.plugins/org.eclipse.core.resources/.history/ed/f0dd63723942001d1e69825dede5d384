package com.gunadhya.diem.controllers;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.gunadhya.diem.entities.StatusEntity;
import com.gunadhya.diem.service.StatusService;

@RestController
public class StatusController 
{		
		@Autowired
		private StatusService statusService;
		
		//get all EntityStatus handler
		@GetMapping("/getAllStatusEntity")
		public ResponseEntity<List<StatusEntity>> getAllStatusEntity()
		{
			
			List<StatusEntity> allStatusEntity = statusService.getAllStatusEntity();
					
			if(allStatusEntity.size()<=0)
			{
			return ResponseEntity.status(HttpStatus.NOT_FOUND).build();
			}
			return ResponseEntity.status(HttpStatus.CREATED).body(allStatusEntity);
					
		}
//
//		
//		// get single EntityStatus handler
//		@GetMapping("/getStatusEntityById/{Id}")
//		public ResponseEntity<StatusEntity> getStatusEntity(@PathVariable("Id") int statusEntityId)
//		{
//		StatusEntity statusEntity = statusService.getStatusEntityById(statusEntityId);
//		
//			if(statusEntity == null)
//			{
//				return ResponseEntity.status(HttpStatus.NOT_FOUND).build();
//			}
//			return ResponseEntity.of(Optional.of(statusEntity));						
//		}
		
		//add new EntityStatus handler
		@PostMapping("/addStatusEntity")
		public ResponseEntity<StatusEntity> addStatusEntity(@RequestBody StatusEntity statusEntity)
		{
				StatusEntity statusEntity1 = null;
				
				try
				{
					statusEntity1 = statusService.addStatusEntity(statusEntity);
					System.out.println(statusEntity1); 
					return ResponseEntity.status(HttpStatus.CREATED).build();
				}
				catch(Exception e)
				{
					e.printStackTrace();
					return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();
				} 
		}
		
		
		 //delete EntityStatus handler
/*		@DeleteMapping("/deleteStatusEntity/{Id}")
		public ResponseEntity<Void>  addStatusEntity(@PathVariable("Id") int statusEntityId)
		{
		
				try
				{
					statusService.deleteStatusEntity(statusEntityId);
					return ResponseEntity.status(HttpStatus.NO_CONTENT).build();
				}
				catch(Exception e)
				{
					e.printStackTrace();
					return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();
				}
				
		}
		
		

		 //update EntityStatus handler
		@PutMapping("/updateStatusEntity/{Id}")
		public ResponseEntity<StatusEntity> addStatusEntity(@PathVariable("Id") int statusEntityId, @RequestBody StatusEntity statusEntity)
		{
						
			try
			{
				statusService.updateStatusEntity(statusEntity, statusEntityId);
				return ResponseEntity.ok().build();
			}
			
			catch(Exception e)
			{
				e.printStackTrace();
				return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).build();
			}
			
		}
*/		
}
