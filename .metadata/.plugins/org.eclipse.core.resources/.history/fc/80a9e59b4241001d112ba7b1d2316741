package com.gunadhya.diem.controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.gunadhya.diem.entities.StatusEntity;
import com.gunadhya.diem.service.StatusService;

@RestController
public class StatusController 
{		
		@Autowired
		private StatusService statusService;
		
		//get all EntityStatus handler
//		@GetMapping("/getAllStatusEntity")
//		public ResponseEntity<List<StatusEntity>> getAllStatusEntity()
//		{
		
//			if(list.size==0)
//			{
//				return ResponseEntity.status(HttpStatus.NOT_FOUND).build();
//			}
//			return ResponseEntity.of(Optional.of(list));
//					statusService.getAllStatusEntity();
//		}

		
		// get single EntityStatus handler
//		@GetMapping("/getStatusEntityById/{Id}")
//		public ResponseEntity<StatusEntity> getStatusEntity(@PathVariable("Id") int statusEntityId)
//		{
//		StatusEntity statusEntity = statusService.getStatusEntityById(statusEntityId);
//		
//			if(statusEntity == null)
//			{
//				return ResponseEntity.status(HttpStatus.NOT_FOUND).build();
//			}
//			return ResponseEntity.of(Optional.of(list));
//			return statusService.getStatusEntityById(statusEntityId);
//		}
		
		//add new EntityStatus handler
//		@PostMapping("/addStatusEntity")
//		public statusEntity addStatusEntity(@RequestBody StatusEntity statusEntity)
//		{
//			statusService.addStatusEntity(statusEntity);
//			return statusEntity; 
//		}
		
		
		 //delete EntityStatus handler
//		@DeleteMapping("/deleteStatusEntity/{Id}")
//		public statusEntity addStatusEntity(@PathVariable("Id") int statusEntityId)
//		{
//			
//			statusService.deleteStatusEntityById(statusEntityId);
//			return statusEntity; 
//		}
		
		

		 //update EntityStatus handler
		@PutMapping("/updateStatusEntity/{Id}")
		public StatusEntity addStatusEntity(@PathVariable("Id") int statusEntityId, @RequestBody StatusEntity statusEntity)
		{
			
			StatusEntity updateStatusEntity = statusService.updateStatusEntity(statusEntity, statusEntityId);
			return updateStatusEntity; 
		}

		
		
		
}
